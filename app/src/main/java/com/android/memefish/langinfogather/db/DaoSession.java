package com.android.memefish.langinfogather.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.android.memefish.langinfogather.db.Obligee;
import com.android.memefish.langinfogather.db.ObligeeChild;
import com.android.memefish.langinfogather.db.Picture;
import com.android.memefish.langinfogather.db.QuestionNaire;
import com.android.memefish.langinfogather.db.Region;

import com.android.memefish.langinfogather.db.ObligeeDao;
import com.android.memefish.langinfogather.db.ObligeeChildDao;
import com.android.memefish.langinfogather.db.PictureDao;
import com.android.memefish.langinfogather.db.QuestionNaireDao;
import com.android.memefish.langinfogather.db.RegionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig obligeeDaoConfig;
    private final DaoConfig obligeeChildDaoConfig;
    private final DaoConfig pictureDaoConfig;
    private final DaoConfig questionNaireDaoConfig;
    private final DaoConfig regionDaoConfig;

    private final ObligeeDao obligeeDao;
    private final ObligeeChildDao obligeeChildDao;
    private final PictureDao pictureDao;
    private final QuestionNaireDao questionNaireDao;
    private final RegionDao regionDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        obligeeDaoConfig = daoConfigMap.get(ObligeeDao.class).clone();
        obligeeDaoConfig.initIdentityScope(type);

        obligeeChildDaoConfig = daoConfigMap.get(ObligeeChildDao.class).clone();
        obligeeChildDaoConfig.initIdentityScope(type);

        pictureDaoConfig = daoConfigMap.get(PictureDao.class).clone();
        pictureDaoConfig.initIdentityScope(type);

        questionNaireDaoConfig = daoConfigMap.get(QuestionNaireDao.class).clone();
        questionNaireDaoConfig.initIdentityScope(type);

        regionDaoConfig = daoConfigMap.get(RegionDao.class).clone();
        regionDaoConfig.initIdentityScope(type);

        obligeeDao = new ObligeeDao(obligeeDaoConfig, this);
        obligeeChildDao = new ObligeeChildDao(obligeeChildDaoConfig, this);
        pictureDao = new PictureDao(pictureDaoConfig, this);
        questionNaireDao = new QuestionNaireDao(questionNaireDaoConfig, this);
        regionDao = new RegionDao(regionDaoConfig, this);

        registerDao(Obligee.class, obligeeDao);
        registerDao(ObligeeChild.class, obligeeChildDao);
        registerDao(Picture.class, pictureDao);
        registerDao(QuestionNaire.class, questionNaireDao);
        registerDao(Region.class, regionDao);
    }
    
    public void clear() {
        obligeeDaoConfig.clearIdentityScope();
        obligeeChildDaoConfig.clearIdentityScope();
        pictureDaoConfig.clearIdentityScope();
        questionNaireDaoConfig.clearIdentityScope();
        regionDaoConfig.clearIdentityScope();
    }

    public ObligeeDao getObligeeDao() {
        return obligeeDao;
    }

    public ObligeeChildDao getObligeeChildDao() {
        return obligeeChildDao;
    }

    public PictureDao getPictureDao() {
        return pictureDao;
    }

    public QuestionNaireDao getQuestionNaireDao() {
        return questionNaireDao;
    }

    public RegionDao getRegionDao() {
        return regionDao;
    }

}
